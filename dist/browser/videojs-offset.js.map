{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/js/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar videojs = _interopDefault(require('video.js'));\n\n// Default options for the plugin.\nconst defaults = {};\n\n// Cross-compatibility for Video.js 5 and 6.\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n// const dom = videojs.dom || videojs;\n\n/**\n * Function to invoke when the player is ready.\n *\n * This is a great place for your plugin to initialize itself. When this\n * function is called, the player will have its DOM and child components\n * in place.\n *\n * @function onPlayerReady\n * @param    {Player} player\n *           A Video.js player.\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nconst onPlayerReady = (player, options) => {\n  player.on('timeupdate', function() {\n    const curr = this.currentTime();\n\n    if (curr < 0) {\n      this.currentTime(0);\n      this.play();\n    }\n    if (this._offsetEnd > 0 && curr > (this._offsetEnd - this._offsetStart)) {\n      this.pause();\n      if (!this._restartBeginning) {\n        this.currentTime(this._offsetEnd - this._offsetStart);\n      } else {\n        this.trigger('loadstart');\n        this.currentTime(0);\n      }\n    }\n  });\n};\n\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @function offset\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nconst offset = function(options) {\n  options = options || {};\n  const Player = this.constructor;\n\n  this._offsetStart = options.start || 0;\n  this._offsetEnd = options.end || 0;\n  this._restartBeginning = options.restart_beginning || false;\n\n  if (!Player.__super__ || !Player.__super__.__offsetInit) {\n    Player.__super__ = {\n      __offsetInit: true,\n      duration: Player.prototype.duration,\n      currentTime: Player.prototype.currentTime,\n      bufferedPercent: Player.prototype.bufferedPercent,\n      remainingTime: Player.prototype.remainingTime\n    };\n\n    Player.prototype.duration = function() {\n      if (this._offsetEnd > 0) {\n        return this._offsetEnd - this._offsetStart;\n      }\n      return Player.__super__.duration.apply(this, arguments) - this._offsetStart;\n    };\n\n    Player.prototype.currentTime = function(seconds) {\n      if (seconds !== undefined) {\n        return Player.__super__.currentTime\n            .call(this, seconds + this._offsetStart) - this._offsetStart;\n      }\n      return Player.__super__.currentTime\n          .apply(this, arguments) - this._offsetStart;\n    };\n\n    Player.prototype.remainingTime = function() {\n      let curr = this.currentTime();\n\n      if (curr < this._offsetStart) {\n        curr = 0;\n      }\n      return this.duration() - curr;\n    };\n\n    Player.prototype.startOffset = function() {\n      return this._offsetStart;\n    };\n\n    Player.prototype.endOffset = function() {\n      if (this._offsetEnd > 0) {\n        return this._offsetEnd;\n      }\n      return this.duration();\n    };\n  }\n\n  this.ready(() => {\n    onPlayerReady(this, videojs.mergeOptions(defaults, options));\n  });\n};\n\n// Register the plugin with video.js.\nregisterPlugin('offset', offset);\n// Include the version number.\noffset.VERSION = '__VERSION__';\n\nmodule.exports = offset;\n"
  ]
}