{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","videojsOffset","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","videojs","ex","_typeof","defaults","registerPlugin","plugin","onPlayerReady","player","options","on","curr","currentTime","play","_offsetEnd","_offsetStart","pause","_restartBeginning","trigger","offset","_this","Player","constructor","start","end","restart_beginning","__super__","__offsetInit","duration","prototype","bufferedPercent","remainingTime","apply","arguments","seconds","undefined","startOffset","endOffset","ready","mergeOptions","VERSION"],"mappings":"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","file":"/Users/cgcladera/Projects/videojs-offset/dist/browser/videojs-offset.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar videojs = _interopDefault(require('video.js'));\n\n// Default options for the plugin.\nconst defaults = {};\n\n// Cross-compatibility for Video.js 5 and 6.\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n// const dom = videojs.dom || videojs;\n\n/**\n * Function to invoke when the player is ready.\n *\n * This is a great place for your plugin to initialize itself. When this\n * function is called, the player will have its DOM and child components\n * in place.\n *\n * @function onPlayerReady\n * @param    {Player} player\n *           A Video.js player.\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nconst onPlayerReady = (player, options) => {\n  player.on('timeupdate', function() {\n    const curr = this.currentTime();\n\n    if (curr < 0) {\n      this.currentTime(0);\n      this.play();\n    }\n    if (this._offsetEnd > 0 && curr > (this._offsetEnd - this._offsetStart)) {\n      this.pause();\n      if (!this._restartBeginning) {\n        this.currentTime(this._offsetEnd - this._offsetStart);\n      } else {\n        this.trigger('loadstart');\n        this.currentTime(0);\n      }\n    }\n  });\n};\n\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @function offset\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nconst offset = function(options) {\n  options = options || {};\n  const Player = this.constructor;\n\n  this._offsetStart = options.start || 0;\n  this._offsetEnd = options.end || 0;\n  this._restartBeginning = options.restart_beginning || false;\n\n  if (!Player.__super__ || !Player.__super__.__offsetInit) {\n    Player.__super__ = {\n      __offsetInit: true,\n      duration: Player.prototype.duration,\n      currentTime: Player.prototype.currentTime,\n      bufferedPercent: Player.prototype.bufferedPercent,\n      remainingTime: Player.prototype.remainingTime\n    };\n\n    Player.prototype.duration = function() {\n      if (this._offsetEnd > 0) {\n        return this._offsetEnd - this._offsetStart;\n      }\n      return Player.__super__.duration.apply(this, arguments) - this._offsetStart;\n    };\n\n    Player.prototype.currentTime = function(seconds) {\n      if (seconds !== undefined) {\n        return Player.__super__.currentTime\n            .call(this, seconds + this._offsetStart) - this._offsetStart;\n      }\n      return Player.__super__.currentTime\n          .apply(this, arguments) - this._offsetStart;\n    };\n\n    Player.prototype.remainingTime = function() {\n      let curr = this.currentTime();\n\n      if (curr < this._offsetStart) {\n        curr = 0;\n      }\n      return this.duration() - curr;\n    };\n\n    Player.prototype.startOffset = function() {\n      return this._offsetStart;\n    };\n\n    Player.prototype.endOffset = function() {\n      if (this._offsetEnd > 0) {\n        return this._offsetEnd;\n      }\n      return this.duration();\n    };\n  }\n\n  this.ready(() => {\n    onPlayerReady(this, videojs.mergeOptions(defaults, options));\n  });\n};\n\n// Register the plugin with video.js.\nregisterPlugin('offset', offset);\n// Include the version number.\noffset.VERSION = '__VERSION__';\n\nmodule.exports = offset;\n"]}